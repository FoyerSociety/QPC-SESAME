from tkinter import * 
from threading import Thread
import sys
import test 
from PyQt5.QtCore import (Qt, QSize,QByteArray, pyqtSlot, pyqtSignal, QThread)
from PyQt5.QtGui import (QMovie)
from PyQt5.QtWidgets import (QApplication, QWidget,QSizePolicy,QVBoxLayout, QPushButton, QLabel, QGridLayout)

class ImagePlayer(QWidget):
    def __init__(self, filename, parent=None):
        QWidget.__init__(self, parent)
        
        # Load the file into a QMovie
        self.movie = QMovie(filename, QByteArray(), self)

        size = self.movie.scaledSize()
        self.setGeometry(600, 340, size.width(), size.height())
        self.setWindowTitle("QPC SESAME")

        self.movie_screen = QLabel()
        # Make label fit the gif
        self.movie_screen.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.movie_screen.setAlignment(Qt.AlignCenter)

        # Create the layout
        main_layout = QVBoxLayout()
        main_layout.addWidget(self.movie_screen)

        self.setLayout(main_layout)

        # Add the QMovie object to the label
        self.movie.setCacheMode(QMovie.CacheAll)
        self.movie.setSpeed(100)
        self.movie_screen.setMovie(self.movie)
        self.movie.start()

    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            app.quit()
        elif event.button() == Qt.RightButton:
            app.quit()
        elif event.button() == Qt.MidButton:
            app.hide()


class Interface():
    def __init__(self):
        self.root = Tk()
        self.root.title('QPC SESAME')
        self.root.mainloop()
    



class Fenetre():
    def __init__(self):
        Thread.__init__(self)

    def run(self):
        print('hello')
        print('world')

        fen = Interface()

class Intro():
    def __init__(self):
        Thread.__init__(self)


    def run(self):
        gif = "load.gif"
        app = QApplication(sys.argv)
        player = ImagePlayer(gif)
        player.show()
        sys.exit(app.exec_())   


if __name__ =='__main__':
    thread1 = Intro()
    thread2 = Fenetre()
    
    thread1.start()
    thread2.start()
    
    thread1.join()
    thread2.join()
    
    